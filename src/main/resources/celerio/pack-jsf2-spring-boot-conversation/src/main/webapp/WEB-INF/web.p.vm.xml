$output.webinf("web.xml")##
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1" metadata-complete="true">
	<!-- Remove classpath scanning (from servlet 3.0) in order to speed web container startup
	metadata-complete="true" above + empty absolute ordering below	-->
	<absolute-ordering>
		<!-- Empty absolute ordering is necessary to completely disable classpath scanning -->
	</absolute-ordering>
	<session-config>
		<!-- session timeout in minutes -->
		<session-timeout>10</session-timeout>
		<cookie-config>
			<http-only>true</http-only>
		</cookie-config>
        <tracking-mode>COOKIE</tracking-mode>
	</session-config>
	<!-- Error pages. -->
	<error-page>
		<exception-type>javax.faces.application.ViewExpiredException</exception-type>
		<location>/home.faces?session_expired=true</location>
	</error-page>
	<error-page>
		<exception-type>org.springframework.security.core.AuthenticationException</exception-type>
		<location>/home.faces?session_expired=true</location>
	</error-page>
	<error-page>
		<exception-type>org.springframework.dao.DataAccessException</exception-type>
		<location>/error/data-error.faces</location>
	</error-page>
	<error-page>
		<!-- comment it if you use myfaces, otherwise omnifaces will complain severely -->
		<exception-type>com.sun.faces.context.FacesFileNotFoundException</exception-type>
		<location>/error/not-found.faces</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/error/error.faces</location>
	</error-page>
		<error-page>
		<error-code>500</error-code>
		<location>/error/error.faces</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/error/not-found.faces</location>
	</error-page>
	<!-- Default page -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
#if($configuration.hasModule($CONTAINER_SECURITY))
	<!-- security roles used in this application -->
	<security-role>
		<role-name>ROLE_USER</role-name>
	</security-role>
	<security-role>
		<role-name>ROLE_ADMIN</role-name>
	</security-role>
	<security-role>
		<role-name>ROLE_SECURED_CARD</role-name>
	</security-role>
	<security-role>
		<role-name>ROLE_MONITORING</role-name>
	</security-role>
#end
	<security-constraint>
		<display-name>Restrict direct access to XHTML files</display-name>
		<web-resource-collection>
			<web-resource-name>XHTML files</web-resource-name>
			<url-pattern>*.xhtml</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>
</web-app>