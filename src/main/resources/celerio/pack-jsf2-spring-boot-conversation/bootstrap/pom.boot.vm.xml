$output.file("pom.xml")##
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
    <groupId>$configuration.rootPackage</groupId>
    <artifactId>$configuration.applicationName</artifactId>
    <packaging>war</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>$configuration.applicationName</name>
    <properties>
        <!-- ~~~~~~~~ -->
        <!-- Database -->
        <!-- ~~~~~~~~ -->
        <!-- Note: during development using the same value for your login, password, database name and project name is really convenient -->
        <database.name>${dollar}{project.name}</database.name>
        <database.host>localhost</database.host>
        <database.user>${dollar}{project.name}</database.user>
        <database.password>${dollar}{project.name}</database.password>
#if ($jdbcConnectivity.isValid())
        <!-- **** DO NOT USE A PRODUCTION DATABASE **** -->
        <jdbc.type>todo</jdbc.type><!-- see 'db' profile, it is used to find the sql script -->
        <!-- jdbc driver -->
        <jdbc.groupId>$jdbcConnectivity.driverGroupId</jdbc.groupId>
        <jdbc.artifactId>$jdbcConnectivity.driverArtifactId</jdbc.artifactId>
        <jdbc.version>$jdbcConnectivity.driverArtifactIdVersion</jdbc.version>

        <!-- jdbc settings -->
        <jdbc.driver>$jdbcConnectivity.driver</jdbc.driver>
        <jdbc.url>$jdbcConnectivity.url</jdbc.url>
        <jdbc.user>$jdbcConnectivity.user</jdbc.user>
        <jdbc.password>$jdbcConnectivity.password</jdbc.password>
        <jdbc.catalog>$jdbcConnectivity.catalog</jdbc.catalog>

        <hibernate.dialect>$jdbcConnectivity.hibernateDialect</hibernate.dialect>
        <sql-maven-plugin.delimiter>$jdbcConnectivity.sqlDelimiter</sql-maven-plugin.delimiter>
#else
        <!-- **** CHANGE THE PROPERTIES BELOW TO USE YOUR OWN DATABASE **** -->
        <!-- **** DO NOT USE A PRODUCTION DATABASE **** -->
        <jdbc.type>mysql</jdbc.type><!-- see 'db' profile, it is used to find the sql script -->

        <!-- h2 jdbc driver -->
		<jdbc.groupId>mysql</jdbc.groupId>
        <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
        <jdbc.version>8.0.28</jdbc.version>

        <!-- h2 jdbc settings -->
        <jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
        <jdbc.url>jdbc:mysql://localhost:3309/${dollar}{project.name}</jdbc.url>
        <jdbc.user>${dollar}{database.user}</jdbc.user>
        <jdbc.password>${dollar}{database.password}</jdbc.password>
        <jdbc.catalog>${dollar}{project.name}</jdbc.catalog>
        <hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
        <sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
#end

        <!-- ~~~~~~ -->
        <!-- System -->
        <!-- ~~~~~~ -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Version dependencies when used in multiple dependencies -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <celerio-maven-plugin.outputDir>${dollar}{project.basedir}</celerio-maven-plugin.outputDir>
        <celerio-maven-plugin.version>4.0.24.3-SNAPSHOT</celerio-maven-plugin.version>
        <hibernate.version>5.6.5.Final</hibernate.version>
        <spring-boot-version>2.6.3</spring-boot-version>
        <spring-security.version>5.6.1</spring-security.version>
        <spring-security-starter.version>2.6.3</spring-security-starter.version>
        <hibernate-search.version>6.1.1.Final</hibernate-search.version>
        <jsf-api.version>2.2.12</jsf-api.version>
        <primefaces.version>11.0.0</primefaces.version>
        <primefaces-themes.version>1.0.10</primefaces-themes.version>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Variables substituted in resources file at build time -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <application.name>${dollar}{project.name}</application.name>
        <application.version>${dollar}{project.version}</application.version>
        <application.description>${dollar}{project.description}</application.description>
        <!-- host port where the application will be deployed -->
        <application.host>localhost</application.host>
        <application.port>8181</application.port>
        <application.contextpath>/rahulshop</application.contextpath>
        <!-- logs -->
        <log.target>${dollar}{project.basedir}/logs</log.target>
        <log.level>DEBUG</log.level>
        <log.sql.queries.level>DEBUG</log.sql.queries.level>
        <!-- hibernate, see by src/main/resource/hibernate.properties -->
        <hibernate.show.sql>true</hibernate.show.sql>
        <hibernate.format.sql>true</hibernate.format.sql>
        <hibernate.generate_statistics>true</hibernate.generate_statistics>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>
        <hibernate.ehcache.configuration.file>ehcache.xml</hibernate.ehcache.configuration.file>
        <hibernate.use.second.level.cache>false</hibernate.use.second.level.cache>
        <hibernate.use.query.cache>true</hibernate.use.query.cache>
    </properties>
    <profiles>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Drop and recreate the database -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
#if (!$jdbcConnectivity.isValid())
        <profile>
            <id>db</id>
            <build>
                <defaultGoal>initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <!-- http://mojo.codehaus.org/sql-maven-plugin/ -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>Create and initialize the database</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <driver>${dollar}{jdbc.driver}</driver>
                                    <url>${dollar}{jdbc.url}</url>
                                    <username>${dollar}{jdbc.user}</username>
                                    <password>${dollar}{jdbc.password}</password>
                                    <autocommit>true</autocommit>
                                    <encoding>UTF-8</encoding>
                                    <printResultSet>true</printResultSet>
                                    <onError>continue</onError>
                                    <delimiter>${dollar}{sql-maven-plugin.delimiter}</delimiter>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${dollar}{project.basedir}</basedir>
                                        <includes>
                                            <include>src/main/sql/${dollar}{jdbc.type}/*.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${dollar}{jdbc.groupId}</groupId>
                                <artifactId>${dollar}{jdbc.artifactId}</artifactId>
                                <version>${dollar}{jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
#end
        <!-- Profiles below are used when Celerio Maven Plugin is present in the build process -->
        <profile>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Extract the database metadata -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <id>metadata</id>
            <build>
                <defaultGoal>generate-sources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.jaxio.celerio</groupId>
                        <artifactId>dbmetadata-maven-plugin</artifactId>
                        <version>${dollar}{celerio-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Extract the database schema.</id>
                                <goals>
                                    <goal>extract-metadata</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${dollar}{jdbc.groupId}</groupId>
                                <artifactId>${dollar}{jdbc.artifactId}</artifactId>
                                <version>${dollar}{jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- Generate the code using Celerio -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <id>gen</id>
            <build>
                <defaultGoal>generate-sources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.jaxio.celerio</groupId>
                        <artifactId>celerio-maven-plugin</artifactId>
                        <version>${dollar}{celerio-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Generates files using the extracted database schema.</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.jaxio.celerio.packs</groupId>
                                <artifactId>pack-backend-jpa</artifactId>
                                <version>1.0.5.1-SNAPSHOT</version>
                            </dependency>
                            <dependency>
                                <groupId>com.jaxio.celerio.packs</groupId>
                                <artifactId>pack-jsf2-spring-conversation</artifactId>
                                <version>1.0.5.1-SNAPSHOT</version>
                            </dependency>
                            <dependency>
								<groupId>com.jaxio.celerio.packs</groupId>
							    <artifactId>pack-jsf2-spring-boot-conversation</artifactId>
							    <version>1.0.5.2-SNAPSHOT</version>
							</dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <!-- ~~~~~~~~~~~~ -->
    <!-- DEPENDENCIES -->
    <!-- ~~~~~~~~~~~~ -->
    <dependencies>
    	<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>5.2.0</version>
		</dependency>

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- List your specific dependencies below -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- Dependencies needed by the generated project -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <dependency>
            <groupId>com.jaxio</groupId>
            <artifactId>jpa-querybyexample</artifactId>
			<exclusions>
				<!-- 
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
				-->
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
                <exclusion> 
			        <groupId>org.slf4j</groupId>
			        <artifactId>slf4j-log4j12</artifactId>
			      </exclusion>
			      <exclusion> 
			        <groupId>log4j</groupId>
			        <artifactId>log4j</artifactId>
			      </exclusion>
			      <exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-orm</artifactId>
			      </exclusion>
			      <exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-engine</artifactId>
			      </exclusion>
            </exclusions>
            <version>1.0.2.4.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>8.0.28</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-juli</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${dollar}{jdbc.groupId}</groupId>
            <artifactId>${dollar}{jdbc.artifactId}</artifactId>
            <version>${dollar}{jdbc.version}</version>
        </dependency>
        <!-- ~~~~~~~~~~~~~~~~ -->
        <!-- HIBERNATE SEARCH -->
        <!-- ~~~~~~~~~~~~~~~~ -->
         
        <!-- https://mvnrepository.com/artifact/org.hibernate.search/hibernate-search-mapper-orm -->
		<dependency>
		    <groupId>org.hibernate.search</groupId>
		    <artifactId>hibernate-search-mapper-orm</artifactId>
		    <version>${dollar}{hibernate-search.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.search/hibernate-search-engine -->
		<dependency>
		    <groupId>org.hibernate.search</groupId>
		    <artifactId>hibernate-search-engine</artifactId>
		    <version>${dollar}{hibernate-search.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.search/hibernate-search-backend-lucene -->
		<dependency>
		    <groupId>org.hibernate.search</groupId>
		    <artifactId>hibernate-search-backend-lucene</artifactId>
		    <version>${dollar}{hibernate-search.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.search/hibernate-search-util-common -->
		<dependency>
		    <groupId>org.hibernate.search</groupId>
		    <artifactId>hibernate-search-util-common</artifactId>
		    <version>${dollar}{hibernate-search.version}</version>
		</dependency>

		<dependency>
		   <groupId>org.hibernate.search</groupId>
		   <artifactId>hibernate-search-v5migrationhelper-orm</artifactId>
		   <version>6.0.8.Final</version>
		</dependency>
		<!-- 
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <version>1.24</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>
        -->
        <!-- ~~~~~~~~~~ -->
        <!-- VALIDATION -->
        <!-- ~~~~~~~~~~ -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.1.3.Final</version>
        </dependency>
        <dependency> <!-- validation html -->
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.13.1</version>
        </dependency>
        <!-- ~~~~~ -->
        <!-- UTILS -->
        <!-- ~~~~~ -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-jexl</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>28.2-jre</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.14</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>
        <!-- ~~~~~~ -->
        <!-- SPRING -->
        <!-- ~~~~~~ -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>        
        
        <!-- ~~~~~~~~~~~~~~~ -->
        <!-- SPRING SECURITY -->
        <!-- ~~~~~~~~~~~~~~~ -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- 
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${dollar}{spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${dollar}{spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-acl</artifactId>
            <version>${dollar}{spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${dollar}{spring-security.version}</version>
        </dependency>
        
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-security</artifactId>
            <version>${dollar}{spring-security-starter.version}</version>
		</dependency>
		-->

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- JSF						 -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- https://mvnrepository.com/artifact/javax.faces/javax.faces-api -->
		<dependency>
		    <groupId>javax.faces</groupId>
		    <artifactId>javax.faces-api</artifactId>
		    <version>2.3</version>
		</dependency>
		<dependency>
		  <groupId>org.glassfish</groupId>
		  <artifactId>javax.faces</artifactId>
		  <version>2.3.8</version>
		</dependency>
        <!-- 
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>${dollar}{jsf-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>${dollar}{jsf-api.version}</version>
        </dependency>
        -->
        <dependency>
		    <groupId>org.apache.tomcat.embed</groupId>
		    <artifactId>tomcat-embed-jasper</artifactId>
		    <scope>provided</scope>
		</dependency>

        <!-- to use myfaces, comment the 2 dependencies above and uncomment the 2 below ...
            review web.xml as well, you need to comment out something there too.
        -->
        <!--		 <dependency> -->
        <!--			 <groupId>org.apache.myfaces.core</groupId> -->
        <!--			 <artifactId>myfaces-api</artifactId> -->
        <!--			 <version>2.1.10</version> -->
        <!--		 </dependency> -->
        <!--		 <dependency> -->
        <!--			 <groupId>org.apache.myfaces.core</groupId> -->
        <!--			 <artifactId>myfaces-impl</artifactId> -->
        <!--			 <version>2.1.10</version> -->
        <!--		 </dependency> -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${dollar}{primefaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>1.8.1</version>
            <!-- 2.1 requires CDI... -->
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-web</artifactId>
            <version>2.0.4</version>
        </dependency>
        <dependency><!-- optional theme (see also web.xml to enable it) -->
            <groupId>org.primefaces.themes</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${dollar}{primefaces-themes.version}</version>
        </dependency>
        <!-- ~~~ -->
        <!-- WEB -->
        <!-- ~~~ -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
            <scope>runtime</scope>
        </dependency>

		<dependency>
		  <groupId>javax.xml.bind</groupId>
		  <artifactId>jaxb-api</artifactId>
		  <version>2.3.0</version>
		</dependency>
		<dependency>
		  <groupId>com.sun.xml.bind</groupId>
		  <artifactId>jaxb-core</artifactId>
		  <version>2.3.0</version>
		</dependency>
		<dependency>
		  <groupId>com.sun.xml.bind</groupId>
		  <artifactId>jaxb-impl</artifactId>
		  <version>2.3.0</version>
		</dependency>

        <!-- ~~~~~~~~~~ -->
        <!-- MONITORING -->
        <!-- ~~~~~~~~~~ -->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.82.0</version>
        </dependency>
        <!-- ~~~~ -->
        <!-- TEST -->
        <!-- ~~~~ -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core -->
		<dependency>
		    <groupId>org.apache.lucene</groupId>
		    <artifactId>lucene-core</artifactId>
		    <version>8.11.1</version>
		</dependency>

		<dependency>
		    <groupId>org.apache.lucene</groupId>
		    <artifactId>lucene-queryparser</artifactId>
		    <version>8.11.1</version>
		</dependency>

	    <dependency>
	        <groupId>org.hibernate</groupId>
	        <artifactId>hibernate-ehcache</artifactId>
	        <version>${dollar}{hibernate.version}</version>
	    </dependency>
    </dependencies>
    <!-- ~~~~~~~~~~~~ -->
    <!-- REPOSITORIES -->
    <!-- ~~~~~~~~~~~~ -->
    <repositories>
        <repository>
            <id>primefaces</id>
            <url>https://repository.primefaces.org</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>jboss</id>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
		<repository>
		  <id>maven-restlet</id>
		  <name>Public online Restlet repository</name>
		  <url>https://maven.restlet.com</url>
		</repository>
    </repositories>
    
    <!-- ~~~~~ -->
    <!-- BUILD -->
    <!-- ~~~~~ -->
    <build>
        <defaultGoal>jetty:run</defaultGoal>
        <resources>
            <resource>
                <directory>${dollar}{celerio-maven-plugin.outputDir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${dollar}{celerio-maven-plugin.outputDir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <delimiters>
                        <delimiter>@*@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                        <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <compilerArgument>-Xlint</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <!-- http://mojo.codehaus.org/build-helper-maven-plugin/ -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>Adding generated java folder to build</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${dollar}{celerio-maven-plugin.outputDir}/src/main/java</source>
                                <source>${dollar}{celerio-maven-plugin.outputDir}/src/main/generated-java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Adding generated java test location to test build</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${dollar}{dollar}{celerio-maven-plugin.outputDir}/${JAVA_TEST.unixFolder}</source>
#if(!$JAVA_TEST.sameAsGeneratedFolder())
                                <source>${dollar}{celerio-maven-plugin.outputDir}/${JAVA_TEST.unixGeneratedFolder}</source>
#end
                            </sources>
                        </configuration>
                    </execution>
                                    </executions>
            </plugin>
            
            <plugin>
                <!-- http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.28.v20200408</version>
                <configuration>
                    <systemProperties>
                        <systemProperty>
                            <name>org.apache.el.parser.SKIP_IDENTIFIER_CHECK</name>
                            <value>true</value>
                        </systemProperty>
                    </systemProperties>

                    <stopKey>foo</stopKey>
                    <stopPort>9999</stopPort>
                    <webAppConfig>
                        <contextPath>${dollar}{application.contextpath}</contextPath>
                        <overrideDescriptor>
                            ${dollar}{celerio-maven-plugin.outputDir}/src/main/config/maven-jetty-plugin/web-development.xml
                        </overrideDescriptor>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>
                                ${dollar}{project.basedir}/src/main/webapp/,${dollar}{celerio-maven-plugin.outputDir}/src/main/webapp/
                            </resourcesAsCSV>
                        </baseResource>
                    </webAppConfig>
                    <requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
                        <filename>target/jetty-yyyy_mm_dd-request.log</filename>
                        <retainDays>3</retainDays>
                        <append>true</append>
                        <extended>false</extended>
                        <logTimeZone>GMT</logTimeZone>
                    </requestLog>
                </configuration>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-failsafe-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
                    <systemPropertyVariables>
                        <selenium.baseurl>
                            http://${dollar}{application.host}:${dollar}{application.port}${dollar}{application.contextpath}
                        </selenium.baseurl>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-war-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${dollar}{celerio-maven-plugin.outputDir}/src/main/webapp</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-install-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-clean-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6.1</version>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-surefire-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <!-- surefire uses a new jvm, MAVEN_OPTS are ignored, so you better set the memory options here -->
                    <argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-release-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.2.2</version>
                <configuration>
                    <arguments>-Pdb,metadata,gen</arguments>
                    <releaseProfiles>db,metadata,gen</releaseProfiles>
                </configuration>
            </plugin>
			<plugin>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-maven-plugin</artifactId>             
			    <configuration>    
			        <mainClass>$Root".Application"</mainClass>
			    </configuration>
			</plugin>
        </plugins>
    </build>
</project>
